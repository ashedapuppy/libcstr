make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Thu May  5 21:59:16 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION::WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 21)
SRC := src
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /home/thebest/.nvm/versions/node/v18.0.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 38)
INCLUDES := -Iinclude
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /home/thebest/clib
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 34)
RM = rm -f
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code/bin/code
# makefile (from 'Makefile', line 10)
CFLAGS := -Wall -Wextra -g -fPIC -std=c99
# environment
STARSHIP_SESSION_KEY = 2887325873163293
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 44)
SOURCES := src/string.c
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_CWD = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/thebest/.vscode-server/bin/dfd34e8260c270da74b5c2d86d61aee4b6d56977/bin/remote-cli:/home/thebest/.nvm/versions/node/v18.0.0/bin:/home/thebest/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Oculus/Support/oculus-runtime:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/admin/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code/bin:/home/thebest/.local/bin/
# makefile (from 'Makefile', line 35)
MD := mkdir -p
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
NVM_BIN = /home/thebest/.nvm/versions/node/v18.0.0/bin
# makefile (from 'Makefile', line 32)
LIBDIRS := lib
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-dfe32dc9-ddfe-4968-ab2f-9301094d371c.sock
# makefile (from 'Makefile', line 27)
LIB := lib
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/thebest/clib
# makefile (from 'Makefile', line 55)
OUTPUTMAIN := output/libcstr.so
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/9_interop
# environment
WT_SESSION = f5e59ee0-5665-42fe-987f-80c65a828466
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/thebest
# environment
LOGNAME = thebest
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# makefile (from 'Makefile', line 31)
INCLUDEDIRS := include
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# makefile (from 'Makefile', line 33)
FIXPATH = $1
# makefile (from 'Makefile', line 7)
CC = gcc
# default
MAKE_VERSION := 4.2.1
# environment
USER = thebest
# makefile
.DEFAULT_GOAL := all
# makefile (from 'Makefile', line 24)
INCLUDE := include
# makefile (from 'Makefile', line 30)
SOURCEDIRS := src
# environment
NAME = Code
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 15)
LFLAGS = 
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/admin/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.2
# default
MAKE_COMMAND := make
# environment
OLDPWD = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /home/thebest/.nvm
# makefile (from 'Makefile', line 29)
MAIN := libcstr.so
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
WT_PROFILE_ID = {2c4de342-38b7-51cf-b940-2309a097f518}
# makefile (from 'Makefile', line 18)
OUTPUT := output
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# environment
HOSTTYPE = x86_64
# makefile (from 'Makefile', line 41)
LIBS := -Llib
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 47)
OBJECTS := src/string.o
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu
# environment
STARSHIP_SHELL = zsh
# variable set hash-table stats:
# Load=91/1024=9%, Rehash=0, Collisions=9/153=6%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 307809): 14 files, no impossibilities.
# src (device 2064, inode 308008): 4 files, no impossibilities.

# 18 files, no impossibilities in 2 directories.

# Implicit Rules

# No implicit rules.

# Files

all: output libcstr.so
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 58):
	@echo Executing 'all' complete!

.PHONY: clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-05 21:59:05.627417663
#  File has been updated.
#  Successfully updated.

.c.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 71):
	$(CC) $(CFLAGS) $(INCLUDES) -c $<  -o $@

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

libcstr.so: src/string.o
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := libcstr.so
# automatic
# % := 
# automatic
# * := 
# automatic
# + := src/string.o
# automatic
# | := 
# automatic
# < := src/string.o
# automatic
# ^ := src/string.o
# automatic
# ? := src/string.o
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/18=11%
#  recipe to execute (from 'Makefile', line 64):
	$(CC) -shared $(CFLAGS) $(INCLUDES) -o $(OUTPUTMAIN) $(OBJECTS) $(LFLAGS) $(LIBS)

run: all
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 80):
	./$(OUTPUTMAIN)
	@echo Executing 'run: all' complete!

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 75):
	$(RM) $(OUTPUTMAIN)
	$(RM) $(call FIXPATH,$(OBJECTS))
	@echo Cleanup complete!

# Not a target:
src/string.o:
#  Implicit rule search has been done.
#  Last modified 2022-05-04 12:24:49.354275777
#  File has been updated.
#  Successfully updated.

output:
#  Implicit rule search has not been done.
#  Last modified 2022-05-04 12:24:49.394275777
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 61):
	$(MD) $(OUTPUT)

# files hash-table stats:
# Load=11/1024=1%, Rehash=0, Collisions=0/31=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 27 / storage = 229 B / avg = 8 B
# current buf: size = 8162 B / used = 229 B / count = 27 / avg = 8 B

# strcache performance: lookups = 48 / hit rate = 43%
# hash-table stats:
# Load=27/8192=0%, Rehash=0, Collisions=2/48=4%
# Finished Make data base on Thu May  5 21:59:16 2022

 
